name: CI - build & test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  backend:
    name: Backend (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build & run tests (Maven)
        run: mvn -B clean verify

        # If your backend uses Gradle instead, replace the above with:
        # run: ./gradlew --no-daemon clean build

      - name: Upload backend artifacts (jar + test reports)
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifacts
          path: |
            target/*.jar
            target/surefire-reports/**/*.xml
            build/libs/*.jar    # gradle output (if using gradle)

  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --watchAll=false

      - name: Build
        run: npm run build

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: build
